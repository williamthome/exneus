---
name: CI

# Base file: https://fly.io/phoenix-files/github-actions-for-elixir-ci/#getting-started

"on":
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  workflow_dispatch: {}
  merge_group:

# Sets the ENV `MIX_ENV` to `test` for running tests
env:
  MIX_ENV: test

permissions:
  contents: read

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  ci:
    name: CI OTP-${{matrix.otp-version}} / Elixir ${{matrix.elixir-version}}

    runs-on: ubuntu-24.04

    strategy:
      matrix:
        include:
          - otp-version: "24.3"
            elixir-version: "1.12"
          - otp-version: "24.3"
            elixir-version: "1.13"
          - otp-version: "25.3"
            elixir-version: "1.14"
          - otp-version: "26.2"
            elixir-version: "1.15"
          - otp-version: "26.2"
            elixir-version: "1.16"
          - otp-version: "27.0"
            elixir-version: "1.17"

    steps:
      # Step: Setup Elixir + Erlang image as the base.
      - name: Set up Elixir
        uses: erlef/setup-beam@b9c58b0450cd832ccdb3c17cc156a47065d2114f # v1.18.1
        id: setup-beam
        with:
          otp-version: ${{matrix.otp-version}}
          elixir-version: ${{matrix.elixir-version}}

      # Step: Check out the code.
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      # Step: Define how to cache deps. Restores existing cache if present.
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v4
        env:
          cache-name: cache-elixir-deps
        with:
          path: deps
          key: ${{runner.os}}-mix-${{env.cache-name}}-${{hashFiles('**/mix.lock')}}
          restore-keys: |
            ${{runner.os}}-mix-${{env.cache-name}}-

      # Step: Define how to cache the `_build` directory. After the first run,
      # this speeds up tests runs a lot. This includes not re-compiling our
      # project's downloaded deps every run.
      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v4
        env:
          cache-name: cache-compiled-build
        with:
          path: _build
          key: ${{runner.os}}-mix-${{env.cache-name}}-${{hashFiles('**/mix.lock')}}
          restore-keys: |
            ${{runner.os}}-mix-${{env.cache-name}}-
            ${{runner.os}}-mix-

      # Step: Download project dependencies. If unchanged, uses the cached version.
      - name: Install dependencies
        run: mix deps.get

      # Step: Compile the project treating any warnings as errors.
      # Customize this step if a different behavior is desired.
      - name: Compiles without warnings
        run: mix compile --warnings-as-errors

      # Step: Check that the checked in code has already been formatted.
      # This step fails if something was found unformatted.
      # Customize this step as desired.
      - name: Check Formatting
        run: mix format --check-formatted

      # Step: Execute the tests.
      - name: Run tests
        run: mix test

      - name: Check if build left artifacts
        run: |
          mix deps.clean --all
          mix deps.update --all
          git diff --exit-code
